{"version":3,"sources":["components/Github/Github.module.css","components/Header/Header.module.css","components/Repositories/Repositories.module.css","components/Header/Header.tsx","components/Repositories/Repositories.tsx","components/UserInfo/UserInfo.tsx","components/Users/Users.tsx","components/Github/Github.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/UserInfo/UserInfo.module.css","components/Users/Users.module.css"],"names":["module","exports","Header","value","setSearchTerm","useState","tempSearch","setTempSearch","useEffect","className","s","header","logo","type","placeholder","onChange","e","currentTarget","onClick","Repositories","selectedUser","setUserDetails","repo","setRepo","axios","get","login","then","res","data","repos","map","u","href","html_url","target","name","language","updated_at","UserInfo","userDetails","details","src","avatar_url","alt","ava","style","fontWeight","followers","public_repos","location","Users","term","setSelectedUser","users","setUsers","items","usersList","selected","item","id","Github","searchTerm","document","title","container","empty","fontSize","main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9a931444.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Github_main__3NOd7\",\"container\":\"Github_container__29-fJ\",\"empty\":\"Github_empty__3f3KB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2JP0H\",\"logo\":\"Header_logo__1V-5H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"repos\":\"Repositories_repos__S1nbg\",\"data\":\"Repositories_data__1Wvo-\"};","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport s from './Header.module.css';\r\n\r\n\r\n\r\nexport const Header: React.FC<any> = ({ value, setSearchTerm }) => {\r\n    const [tempSearch, setTempSearch] = useState<string>(value)\r\n\r\n\r\n    useEffect(() => {\r\n        setTempSearch(value)\r\n    }, [value])\r\n\r\n    return (<div className={s.header}>\r\n        <div className={s.logo}></div>\r\n        <input\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            value={tempSearch}\r\n            onChange={(e) => { setTempSearch(e.currentTarget.value) }}\r\n        />\r\n        <button\r\n            onClick={() => {\r\n                setSearchTerm(tempSearch)\r\n            }}\r\n        >\r\n            Find\r\n        </button>\r\n\r\n    </div>);\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport s from './Repositories.module.css';\r\n\r\n\r\n\r\nexport const Repositories: React.FC<any> = ({ selectedUser, setUserDetails }) => {\r\n\r\n    const [repo, setRepo] = useState<any[] | null>(null)\r\n\r\n    useEffect(() => {\r\n        if (!!selectedUser) {\r\n            axios.get<any>(`https://api.github.com/users/${selectedUser.login}/repos`)\r\n                .then(res => {\r\n                    setRepo(res.data)\r\n                })\r\n        }\r\n    }, [selectedUser])\r\n\r\n    return (<div className={s.repos}>\r\n        {repo?.map((u: any) =>\r\n            <div>\r\n                <a href={u.html_url} target=\"_blank\">{u.name}</a>\r\n                <div className={s.data}>\r\n                    {u.language} / updated - {u.updated_at}\r\n                </div>\r\n\r\n                <hr />\r\n            </div>\r\n        )}\r\n\r\n    </div>);\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\nimport React from 'react';\r\nimport s from './UserInfo.module.css';\r\n\r\n\r\n\r\nexport const UserInfo: React.FC<any> = ({ userDetails }) => {\r\n\r\n\r\n    return (\r\n        <div className={s.details}>\r\n            {userDetails && <div className={s.details}>\r\n                <img src={userDetails.avatar_url} alt=\"\" className={s.ava} />\r\n                <div style={{ fontWeight: \"bold\" }}>{userDetails.name}</div>\r\n                <div>followers: {userDetails.followers}</div>\r\n                <div> go to me : <a href={userDetails.html_url} target=\"_blank\">{userDetails.login}</a></div>\r\n                <div>public repos: {userDetails.public_repos}</div>\r\n                {userDetails.location && <div>location: {userDetails.location}</div>}\r\n            </div>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { SearchResult, SearchUserType } from '../Github/Github';\r\nimport s from './Users.module.css';\r\n\r\n\r\n\r\nexport const Users: React.FC<any> = ({ term, selectedUser, setSelectedUser }) => {\r\n    const [users, setUsers] = useState<SearchUserType[]>([])\r\n\r\n    useEffect(() => {\r\n        axios.get<SearchResult>(`https://api.github.com/search/users?q=${term}`)\r\n            .then(res => {\r\n                setUsers(res.data.items)\r\n            })\r\n    }, [term])\r\n\r\n    return (\r\n        <div className={s.usersList}>\r\n            <ul>\r\n                {users.map((u: any) =>\r\n                    <li key={u.id}\r\n                        onClick={() => {\r\n                            setSelectedUser(u);\r\n                        }}\r\n                        className={`${selectedUser === u ? s.selected : \"\"} ${s.item}`}\r\n\r\n                    >{u.login}</li>)\r\n                }\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Header } from '../Header/Header';\r\nimport { Repositories } from '../Repositories/Repositories';\r\nimport { UserInfo } from '../UserInfo/UserInfo';\r\nimport { Users } from '../Users/Users';\r\nimport s from './Github.module.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nexport type SearchUserType = {\r\n    login: string\r\n    id: number\r\n}\r\nexport type SearchResult = {\r\n    items: SearchUserType[]\r\n}\r\n\r\ntype UserType = {\r\n    login: string\r\n    id: number\r\n    avatar_url: string\r\n    followers: number\r\n}\r\n\r\nexport function Github() {\r\n    const [selectedUser, setSelectedUser] = useState<SearchUserType | null>(null)\r\n    const [userDetails, setUserDetails] = useState<UserType | null>(null)\r\n    const [searchTerm, setSearchTerm] = useState<string>(\"\")\r\n\r\n    useEffect(() => {\r\n        if (selectedUser) {\r\n            document.title = selectedUser.login\r\n        }\r\n    }, [selectedUser])\r\n\r\n    useEffect(() => {\r\n        if (!!selectedUser) {\r\n            axios.get<UserType>(`https://api.github.com/users/${selectedUser.login}`)\r\n                .then(res => {\r\n                    setUserDetails(res.data)\r\n                })\r\n        }\r\n    }, [selectedUser])\r\n\r\n    return (<div className={s.container}>\r\n        <Header setSearchTerm={(value: string) => setSearchTerm(value)} value={searchTerm} />\r\n        {searchTerm === \"\"\r\n            ? <div className={s.empty}>\r\n                <SearchIcon fontSize=\"large\"/>\r\n                Start with searching\r\n                a GitHub user</div>\r\n            : <div className={s.main}>\r\n                <Users selectedUser={selectedUser} setSelectedUser={setSelectedUser} term={searchTerm} />\r\n                <UserInfo userDetails={userDetails} />\r\n                <Repositories selectedUser={selectedUser} setUserDetails={setUserDetails} />\r\n            </div>}\r\n\r\n\r\n    </div>);\r\n}\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { Github } from './components/Github/Github';\n\nfunction App() {\n  return (<>\n    <Github />\n  </>);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ava\":\"UserInfo_ava__1Ri0n\",\"details\":\"UserInfo_details__o40U_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersList\":\"Users_usersList__3MRu5\",\"item\":\"Users_item__XmC-z\",\"selected\":\"Users_selected__3l5il\"};"],"sourceRoot":""}